function err = residual_function(params,data_file)

%% unpack params
Vmax_g   = 3.61e-9*ones(14,1);        % Maximum glucose uptake rates, umol/h
Km_g     = 1.75*ones(14,1);           % Michaelis constants for glucose uptake, uM
Vmax_aa  = [2.10e-11;...
            7.00e-12;...
            1.02e-10;...
            4.00e-12;...
            1.15e-10;...
            params(1);...
            1.90e-10;...
            params(2);...
            9.60e-11;...
            params(3);...
            2.80e-10;...
            params(4);...
            3.00e-12;...
            4.00e-12];     % Maximum amino acid uptake rates, umol/h
Km_aa    = [4.96e-1;...
            7.20e-1;...
            3.80;...
            params(5);...
            params(6);...
            5.00;...
            1.07;...
            2.27;...
            2.00;...
            params(7);...
            params(8);...
            params(9);...
            9.00e-1;...
            3.40e-1];      % Michaelis constants for amino acid uptake, uM
Yield_g  = 3e8*ones(14,1); % Biomass yields of E. coli auxotrophs growing on glucose, 1/umol
Yield_aa = [2.74e9;...
            1.63e10;...
            1.04e9;...
            1.94e10;...
            8.03e9;...
            5.47e9;...
            4.63e9;...
            1.47e10;...
            1.37e9;...
            6.02e9;...
            3.76e8;...
            2.01e9;...
            4.01e10;...
            1.63e10];       % Biomass yields of E. coli auxotrophs growing on auxotrophic amino acids, 1/umol
Rcarbon  = [2.00;...
            0.67;...
            3.00;...
            1.00;...
            1.00;...
            1.00;...
            1.00;...
            1.20;...
            1.20;...
            1.00;...
            2.00;...
            1.50;...
            0.55;...
            0.67];           % Number of amino acid molecules produced per molecule of glucose is consumed
Cdr      = params(10:23)';   % Cell death rate, 1/h

read_from_data = 1;
if (read_from_data)
    tblPara = readtable('../data/parameters.xls','Sheet','byproduct fraction');
    Byp_frac = tblPara{:, 2:end};
else
    Byp_frac = reshape(params(24:end),14,14); % matrix of amino acid (byproduct) leakge fraction (percentage of carbon loss)
    tblPara = readtable('../data/parameters.xls','Sheet','byproduct fraction');
    Byp_frac2 = tblPara{:, 2:end};
    assert(norm(Byp_frac(:)-Byp_frac2(:))==0);
end

y_obs = [];
y_sim = [];

%% serial dilution of all 14 auxotrophs and 4 selected 13-auxotroph communities

conditions = {'14-strain community (7 days)',...
              '13-strain community (no K)',...
              '13-strain community (no R)',...
              '13-strain community (no T)',...
              '13-strain community (no M)'};

duration        = 7;                        % 7-day experiment
initial_glucose = (0.2*10)/180.156*1e6;     % initial glucose concentration (0.2%, 0.2 g in 100 ml water), uM
for k=1:length(conditions)
    
    % load data
    tbl_relative_abundance_rep1 = readtable(data_file,'Sheet',conditions{k});
    obs_cell_density = tbl_relative_abundance_rep1{:,2:end};
    sim_cell_density = zeros(size(obs_cell_density));
    
    initial_cell_density = obs_cell_density(:,1)/1e-3; % convert from per mL to per L
    sim_cell_density(:,1) = obs_cell_density(:,1);
    y0 = [initial_glucose;initial_cell_density;initial_cell_density;zeros(14,1)]; % initial condition  
    for day=1:duration
        [~,y] = ode15s(@multi_aa_auxotroph_cf_model, ... Model
                       [0,24],                       ... Time interval of integration (unit: h)          
                       y0,                           ... Initial condition
                       odeset('RelTol',1e-6,'AbsTol',1e-6*ones(1,1+3*14),'NonNegative',ones(1,1+3*14)), ... Matlab options
                       Vmax_g, Km_g, Vmax_aa, Km_aa, Yield_g, Yield_aa, Rcarbon, Byp_frac, Cdr ... Model parameters
                      );
        sim_cell_density(:,day+1) = (y(end,2:14+1)/1e3)';
        y0 = y(end,:)/100; % 100 fold dilution
        y0(1) = initial_glucose; % replenish glucose to the initial level
    end
    
    y_obs = [y_obs;...
             obs_cell_density(:)];
    y_sim = [y_sim;...
             abs(sim_cell_density(:))];
         
end

%% compute difference between observed and simulated data

% SMAPE: symmetric mean absolute percentage error
% err = sum(abs(y_obs(:)-y_sim(:))./(abs(y_obs(:))+abs(y_sim(:))+1e-10))/length(y_obs(:));

% MSE: mean squared error
% err = sum((y_obs(:)-y_sim(:)).^2)/length(y_obs(:));

% MSE on log scale
y_sim = y_sim + 1; % a pseudo number to avoid 0
y_obs = y_obs + 1; % a pseudo number to avoid 0
y_sim = log10(y_sim);
y_obs = log10(y_obs);
err = sum((y_obs(:)-y_sim(:)).^2)/length(y_obs(:));


end

